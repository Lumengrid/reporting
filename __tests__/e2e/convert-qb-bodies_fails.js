module.exports = {
  "bodyArray" : [
    {
      "sql": "select\nUsername,\nName,\nCourse,\nStatus,\nSubscription_date,\nActive_until_date\nfrom\n(select \nSUBSTR(cu.userid,2) as Username,\nCONCAT(cu.lastname,', ',cu.firstname) as Name,\nlc.name as Course,\nCASE lcu.status\n\tWHEN 0 THEN 'Not Started'\n    WHEN 1 THEN 'In Progress'\nend Status,\nlcu.date_inscr as Subscription_date,\nlcu.date_expire_validity as Active_until_date\n\nfrom core_user cu \nLEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n\tselect lcat.name as catalog, lce.idCatalogue catalogueId, lco.idCourse\n\tfrom learning_catalogue lcat\n\tinner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n\tinner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nLEFT JOIN (\n\tselect idOrg, lev, idParent, iLeft, iRight, cu.idst from core_org_chart_tree coct\n\tLEFT JOIN core_group_members cgm on coct.idst_oc = cgm.idst\n\tleft join core_user cu on cu.idst = cgm.idstMember\n ) branch on branch.idst = cu.idst\n\nwhere (lcu.status = 0 or lcu.status = 1) and\nlcu.date_expire_validity < NOW() and\ncats.catalogueId = 57 and\nbranch.iLeft > (select iLeft from core_org_chart_tree where idOrg=9387) and\nbranch.iRight < (select iRight from core_org_chart_tree where idOrg=9387) and\nlcu.date_inscr >= STR_TO_DATE('01/01/19', '%d/%m/%Y')\n ) result\norder by  Username;"
     },
    {
      "sql": "select Path, Branch, Username, FirstName, LastName, Email\n      from (\n            SELECT \t group1.Username as Username,\n                     group1.FirstName as FirstName,\n                     group1.LastName as LastName,\n                     group1.Email as Email,\n                     group1.Path as Path,\n            group_concat(group1.BranchName SEPARATOR '; ') AS Branch\n            FROM\n            (\n              SELECT coreuser.idst AS UserId, \n\t\t\t\t     substr(coreuser.userid, 2) as Username,\n                     coreuser.firstname as FirstName,\n                     coreuser.lastname as LastName,\n                     coreuser.email as Email,\n              chartTree.idOrg AS TreeID,\n              buildpath.path as Path, COALESCE(orgChart.translation,'') AS BranchName\n              FROM core_user coreuser\n              LEFT OUTER JOIN core_group_members groupmembers\n              ON coreuser.idst = groupmembers.idstMember\n              INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n              inner join (select idst_oc,path from(\nselect tree.idst_oc, concat(COALESCE(orgChart.translation,''),'>',up1.name,'>',up2.name,'>',up3.name) as path from core_org_chart_tree tree INNER JOIN core_org_chart orgChart\n              ON tree.idOrg = orgChart.id_dir\n               inner join (\nselect idOrg,idParent,COALESCE(orgChart.translation,'') AS name from core_org_chart_tree chartTree INNER JOIN core_org_chart orgChart\n              ON chartTree.idOrg = orgChart.id_dir\n              WHERE orgChart.lang_code = 'english') up1 on up1.idOrg=tree.idParent\ninner join\n(select idOrg,idParent,COALESCE(orgChart.translation,'') AS name from core_org_chart_tree  chartTree INNER JOIN core_org_chart orgChart\n              ON chartTree.idOrg = orgChart.id_dir\n              WHERE orgChart.lang_code = 'english') up2 on up2.idOrg=up1.idParent\ninner join\n(select idOrg,idParent,COALESCE(orgChart.translation,'') AS name from core_org_chart_tree  chartTree INNER JOIN core_org_chart orgChart\n              ON chartTree.idOrg = orgChart.id_dir\n              WHERE orgChart.lang_code = 'english') up3 on up3.idOrg=up2.idParent\n              WHERE orgChart.lang_code = 'english') a) buildpath on buildpath.idst_oc=groupmembers.idst\n              INNER JOIN core_org_chart orgChart\n              ON chartTree.idOrg = orgChart.id_dir\n              WHERE orgChart.lang_code = 'english'\n              AND coreuser.valid = 1\n              AND coreuser.level = 4 \n               and coreuser.email NOT LIKE ('%thomsonreuters.com')\n            and coreuser.email NOT LIKE ('%yourcompany.com')\n            and coreuser.email NOT LIKE ('%tradmin.com')\n            and coreuser.email NOT LIKE ('%trsales.com')\n            and coreuser.email NOT LIKE ('%complinet.com')\n            and coreuser.email NOT LIKE ('%sdl.com')\n            ) group1\n            WHERE group1.TreeID != 0\n            GROUP BY group1.Username,\n                     group1.FirstName,\n                     group1.LastName,\n                     group1.Email,\n                     group1.BranchName,\n                     group1.Path\n\t\t\t) as users\n            order by  1, 2"
    },
    {
      "sql": "select courseType, month, completion_count\nfrom\n(select\n case courseType\n when 'elearning' then 'Self-Study'\n when 'classroom' then 'Live Seminars'\n when 'webinar'   then 'Webinars'\n end as courseType , \ncase month_completed\n when '1' then 'Jan' \n when '2' then 'Feb' \n when '3' then 'Mar' \n when '4' then 'Apr' \n when '5' then 'May' \n when '6' then 'Jun' \n when '7' then 'Jul' \n when '8' then 'Aug' \n when '9' then 'Sep' \n when '10' then 'Oct' \n when '11' then 'Nov' \n when '12' then 'Dec' \nend as month,\ncompletion_count\nfrom\n(select lc.course_type as courseType, month(lcu.date_complete) as month_completed, count(*) as completion_count\nfrom learning_courseuser lcu\ninner join learning_course lc\non lc.idCourse = lcu.idCourse\nwhere lcu.date_complete is not null\n  and year(lcu.date_complete) = :Year_of_completion\n group by courseType, month_completed ) as completions\n order by courseType, month_completed\n ) as completed\n"
    },
    {
      "sql": "SELECT\nid_record AS Record_ID,\nid_admin AS Created_By,\nid_user AS Assigned_To,\ncourse_name AS Course_Name,\n'external' AS Course_Type,\nto_date AS Date,\nscore AS Score,\ntraining_institute AS Institute,\ncertificate AS Certificate,\nstatus AS Status\nFROM transcripts_record\nWHERE status = 'approved'"
    },
    {
      "sql": "SELECT idscorm_resource,idsco,idscorm_package,scormtype,href FROM learning_scorm_resources \nwhere idscorm_package in (SELECT idscorm_package FROM learning_scorm_organizations where title like '%WeComply%');\n\n"
    },
    {
      "sql": "\nSELECT\n\tcdu.idst AS 'Id deleted',\n\treplace(cdu.userid, '/', '') AS 'Username deleted',\n\tcdu.deleted_by AS 'Id deleter',\n\treplace(cu.userid, '/', '') AS 'Username deleter',\n\tcdu.deletion_date AS 'Deleted on'\nFROM\n\tcore_deleted_user AS cdu\nLEFT JOIN core_user AS cu ON\n\tcu.idst = cdu.deleted_by\nORDER BY\n\tcdu.deletion_date desc"
    },
    {
      "sql": "select idst,email from core_user where email in ( 'tina.mistry@bankfab.com',\n 'joe.morse@bankfab.com',\n 'alan.austin@bankfab.com',\n 'gary.flack@bankfab.com',\n 'andrew.grundy2@bankfab.com',\n 'amjad.amhager@bankfab.com',\n 'anne.kenny@bankfab.com',\n 'ben.brousson@bankfab.com',\n 'christopher.jackson-owusu@bankfab.com',\n 'hamish.smith@nbad.com',\n 'ian.towler@bankfab.com',\n 'maryam.tahir@bankfab.com',\n 'pritesh.jobanputra@bankfab.com',\n 'selina.roberts@bankfab.com',\n 'rob.haywood@bankfab.com',\n 'alistair.hill@bankfab.com',\n 'asif.ali@bankfab.com',\n 'becky.yan@bankfab.com',\n 'ehsan.shamat@bankfab.com',\n 'richard.collens@fgb.ae',\n 'phillip.harvell@fgb.ae',\n 's.m-w@outlook.com')"
    },
    {
      "sql": "select code,idCourse from learning_course where code='00651_TR_S1_eng_v3'\n"
    },
    {
      "sql": "select\nUsername,\nFull_Name,\nEmail,\nManager_email,\nRegion,\nCountry,\nDivision,\nDepartment,\nDesk,\nCost_center,\nCourse_Name,\nSubscription_date,\nEnrollment_status,\nActive_until_date,\nCompletion_date\nfrom\n(select\nSUBSTR(cu.userid,2) as Username,\nCONCAT(cu.lastname,', ',cu.firstname) as Full_Name,\ncu.email as Email,\ncufv.field_331 as Manager_email,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_265 as Department,\ncufv.field_834 as Desk,\ncufv.field_842 as Cost_center,\nlc.name as Course_Name,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Subscription_date,\nCASE lcu.status\n                WHEN 0 THEN 'Not Started'\n    WHEN 1 THEN 'In Progress'\n    WHEN 2 THEN 'Completed'\nend Enrollment_status,\nDATE_FORMAT(lcu.date_expire_validity, '%Y-%m-%d') as Active_until_date,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date\n\nfrom\ncore_user cu\nLEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nINNER JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN (\n                select lcat.name as catalog,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nLEFT JOIN (\n                select idOrg, lev, idParent, iLeft, iRight, cu.idst from core_org_chart_tree coct\n                LEFT JOIN core_group_members cgm on coct.idst_oc = cgm.idst\n                left join core_user cu on cu.idst = cgm.idstMember\n) branch on branch.idst = cu.idst\nwhere\n((lcu.status = 0 or lcu.status = 1) and lcu.date_expire_validity < NOW() \nOR lcu.status = 2 and lcu.date_complete > TIMESTAMP(DATE_FORMAT(lcu.date_expire_validity, '%Y-%m-%d'), '23:59:59.999999')) and\ncats.catalog = 'Aberdeen Asset Managers: Course Catalogue' and\nbranch.iLeft > (select iLeft from core_org_chart_tree where idOrg=3031) and\nbranch.iRight < (select iRight from core_org_chart_tree where idOrg=3031) and\nlcu.date_inscr >= STR_TO_DATE(:Report_Start_Date, '%d/%m/%Y')\n) result\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "select count(*) as user_count\nfrom core_user cu\nwhere cu.valid = 1;"
    },
    {
      "sql": "select\nCourse_name,\nCourse_category,\nstart_date,\nTotal_number_of_enrolled_users,\ncompleted_in_30_days_of_enrollment, \nconcat(round((completed_in_30_days_of_enrollment / Number_of_users_completed *100),2),'%') as Percetage_completed_in_30_days_of_enrollment,\nNumber_of_users_completed,\nconcat(round((Number_of_users_completed / Total_number_of_enrolled_users*100),2),'%') as Percentage_of_users_completed,\nNumber_of_users_in_progress_or_subscribed,\nconcat(round((Number_of_users_in_progress_or_subscribed / Total_number_of_enrolled_users * 100),2),'%') as Percentage_of_users_in_progress_or_subscribed,\ncode as Course_productid_or_code,\nRating\n\nfrom\n(\nselect \nlc.name as Course_name,\nlcateg.translation as Course_category,\nlcateg.idCategory as Category_id,\nlc.date_begin as start_date,\n\ncount(if(lcu.status=0 or lcu.status=1 or lcu.status=2,1,NULL)) Total_number_of_enrolled_users ,\ncount(if(lcu.status=0 or lcu.status=1,1,NULL))  Number_of_users_in_progress_or_subscribed ,\ncount(if(lcu.status=2,1,NULL)) Number_of_users_completed,\ncount(if(lcu.status=2 and DATEDIFF(lcu.date_complete, lcu.date_inscr) < 31,1,NULL)) completed_in_30_days_of_enrollment,\nlc.code,\nlcr.rate_average as Rating\n\nfrom core_user cu \nLEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN learning_course_rating lcr on lcu.idCourse = lcr.idCourse\nINNER JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nleft join learning_category lcateg on (lcateg.idCategory=lc.idCategory and lcateg.lang_code='english')\nLEFT JOIN (\n\tselect lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n\tfrom learning_catalogue lcat\n\tinner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n\tinner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nLEFT JOIN (\n\tselect idOrg, lev, idParent, iLeft, iRight, cu.idst from core_org_chart_tree coct\n\tLEFT JOIN core_group_members cgm on coct.idst_oc = cgm.idst\n\tleft join core_user cu on cu.idst = cgm.idstMember\n ) branch on branch.idst = cu.idst\n\nwhere \n\ncats.catalogId = 57 and\nbranch.iLeft > (select iLeft from core_org_chart_tree where idOrg=3031) and\nbranch.iRight < (select iRight from core_org_chart_tree where idOrg=3031)  and\n(lcateg.idCategory = 140 or lcateg.idCategory = 141 or lcateg.idCategory = 142)\n\ngroup by lc.idCourse\n ) result\n order by start_date desc, course_name;\n "
    },
    {
      "sql": "select  idst , userid, email from core_user where idst in (120873,120881,120882,120892,120896,120900,120904,120905,126796,126805,126806,126819,236083,264318,491699,605458)"
    },
    {
      "sql": "SELECT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCMI_Suspend_Data,\nRegion,\nDivision,\nCountry\n\nFROM\n(\nselect DISTINCT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCMI_Suspend_Data,\nRegion,\nDivision,\nCountry\n\nfrom\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nReplace(Replace(Replace(convert(lst.xmldata using utf8), '{', ''), '}', ''), '\', ' ') as CMI_Suspend_Data \nfrom core_user cu\n/*LEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst*/\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t  INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n\t\t\t  INNER JOIN core_org_chart orgChart ON chartTree.idOrg = orgChart.id_dir\n\t\t\t  WHERE orgChart.lang_code = 'english'\n\t\t\t\tAND  chartTree.iLeft >= (select iLeft from core_org_chart_tree where idOrg IN (3031))\n\t\t\t    AND chartTree.iRight <= (select iRight from core_org_chart_tree where idOrg IN (3031))\n\t\t\t) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n/*LEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t  INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n\t\t\t  INNER JOIN core_org_chart orgChart ON chartTree.idOrg = orgChart.id_dir\n\t\t\t  WHERE orgChart.lang_code = 'english'\n\t\t\t\tAND  chartTree.iLeft >= (select iLeft from core_org_chart_tree where idOrg IN (3031))\n\t\t\t    AND chartTree.iRight <= (select iRight from core_org_chart_tree where idOrg IN (3031))\n\t\t\t) lcu on lcu.idUser = cu.idst\nLEFT JOIN (SELECT lc1.idCourse,\n\t\t\tlc1.certificates ,\n\t\t\tlc1.sub_end_date ,\n\t\t\tlc1.create_date ,\n\t\t\tlc1.last_update ,\n\t\t\tlc1.course_type,\n\t\t\tlc1.name,\n\t\t\tlc1.Code\n\t\t\tFROM learning_course lc1\n\t\t\tINNER JOIN learning_catalogue_entry lce ON lce.idEntry = lc1.idCourse \n\t\t\tINNER JOIN learning_catalogue lcat ON  lcat.idCatalogue = lce.idCatalogue\n\t\t\twhere lcat.idCatalogue in (66, 67, 68, 69, 108, 113)\n\t\t\tWHERE lcat.idCatalogue IN (SELECT DISTINCT idCatalogue FROM learning_catalogue_member WHERE idst_member IN (56332))\n\t\t   ) lc on lcu.idCourse=lc.idCourse\n           */\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode,'%')  OR  lc.code = :CourseCode /*'Aberdeen_MiFID II_EN_Bespoke_2021'*/\nand lo.title = lc.name and cats.catalogId = 57\n) result1 WHERE Enrollment_Status IN ('Enrolled','Subscription to Confirm')\n\nUNION\n\n\nselect DISTINCT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCMI_Suspend_Data,\nRegion,\nDivision,\nCountry\n\nfrom\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nReplace(Replace(Replace(convert(lst.xmldata using utf8), '{', ''), '}', ''), '\"', ' ') as CMI_Suspend_Data \nfrom core_user cu\n/*LEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst*/\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t  INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n\t\t\t  INNER JOIN core_org_chart orgChart ON chartTree.idOrg = orgChart.id_dir\n\t\t\t  WHERE orgChart.lang_code = 'english'\n\t\t\t\tAND  chartTree.iLeft >= (select iLeft from core_org_chart_tree where idOrg IN (3031))\n\t\t\t    AND chartTree.iRight <= (select iRight from core_org_chart_tree where idOrg IN (3031))\n\t\t\t) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId  , lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n/*LEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t  INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n\t\t\t  INNER JOIN core_org_chart orgChart ON chartTree.idOrg = orgChart.id_dir\n\t\t\t  WHERE orgChart.lang_code = 'english'\n\t\t\t\tAND  chartTree.iLeft >= (select iLeft from core_org_chart_tree where idOrg IN (3031))\n\t\t\t    AND chartTree.iRight <= (select iRight from core_org_chart_tree where idOrg IN (3031))\n\t\t\t) lcu on lcu.idUser = cu.idst\nLEFT JOIN (SELECT lc1.idCourse,\n\t\t\tlc1.certificates ,\n\t\t\tlc1.sub_end_date ,\n\t\t\tlc1.create_date ,\n\t\t\tlc1.last_update ,\n\t\t\tlc1.course_type,\n\t\t\tlc1.name,\n\t\t\tlc1.Code\n\t\t\tFROM learning_course lc1\n\t\t\tINNER JOIN learning_catalogue_entry lce ON lce.idEntry = lc1.idCourse \n\t\t\tINNER JOIN learning_catalogue lcat ON  lcat.idCatalogue = lce.idCatalogue\n\t\t\twhere lcat.idCatalogue in (66, 67, 68, 69, 108, 113)\n\t\t\tWHERE lcat.idCatalogue IN (SELECT DISTINCT idCatalogue FROM learning_catalogue_member WHERE idst_member IN (56332))\n\t\t   ) lc on lcu.idCourse=lc.idCourse\n           */\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode,'%')  OR  lc.code = :CourseCode /*'Aberdeen_MiFID II_EN_Bespoke_2021'*/\nand lo.title = lc.name and cats.catalogId = 57\n) result2 WHERE Enrollment_Status IN ('In Progress','Completed') AND CMI_Suspend_Data IS NOT NULL\n) fresult\n/*WHERE CMI_Suspend_Data IS NOT NULL*/\n/*WHERE Enrollment_Status ('Enrolled','In Progress','Completed','Subscription to Confirm')*/\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "select count(id_job) from core_job\nwhere core_job.type != 'recurring'\nand 'plugin.NotificationApp.components.NotificationJobHandler' = handler_id;"
    },
    {
      "sql": "SELECT\n\tCOURSE_NAME AS 'Course Name',\n    Course_Category AS 'Course Category',\n    Course_Internal_ID AS 'Course Internal ID',\n    Course_Unique_ID AS 'Course Unique ID',\n    Product_ID AS 'Product ID',\n    Language,\n\tCOMPLETED_USERS_STATUS AS 'Completed User Status',\n\tENROLLED_USER AS 'Enrolled Users',\n        Course_Rating AS 'Course Rating',\nRELEASE_DATE AS 'Release date',\n    LAST_UPDATE AS 'Last update',\n    Date_of_Submission AS 'Date of Submission',\nQuestion,\nAnswer\nFROM\n(\nSELECT \nCOALESCE(c.name, '') AS COURSE_NAME,\n    COALESCE(lc.translation, '') AS Course_Category,\nCOALESCE(c.idCourse, '') AS Course_Internal_ID,\n    COALESCE(c.uidCourse, '') AS Course_Unique_ID,\n    COALESCE(c.code, '') AS Product_ID,\n    COALESCE(c.lang_code, '') AS Language,\nIFNULL(comp.completed_users, 0) as COMPLETED_USERS_STATUS,\nIFNULL(enrol.enrolled_users, 0) as ENROLLED_USER,\nIFNULL(lcr.rate_average, 'N/A') as Course_Rating,\n    lcfv.field_20 as RELEASE_DATE,\n    lcfv.field_45 as LAST_UPDATE,\n    COALESCE(DATE_FORMAT(pt.date_attempt, '%c/%e/%Y'),'') AS Date_of_Submission,\nConcat(Concat(q.title_quest, ' / '), (CASE\n        WHEN q.type_quest = 'likert_scale' THEN qa.answer\n        ELSE q.title_quest\n    END)) AS 'Question',\n(CASE\nWhen q.type_quest = 'likert_scale' THEN ls.title\nWHEN q.type_quest = 'extended_text' THEN a.more_info\nELSE qa.answer\nEND) AS Answer\nFROM learning_polltrack pt\nLEFT JOIN\nlearning_poll p ON p.id_poll = pt.id_poll\n        LEFT JOIN\nlearning_pollquest q ON q.id_poll = pt.id_poll\n        LEFT JOIN\ncore_user u ON u.idst = pt.id_user\n        JOIN\nlearning_polltrack_answer a ON a.id_quest = q.id_quest\n        AND a.id_track = pt.id_track\n        LEFT JOIN\nlearning_poll_likert_scale ls ON ls.id_poll = pt.id_poll\n        AND ls.id = a.more_info\n        LEFT JOIN\nlearning_pollquestanswer qa ON qa.id_quest = a.id_quest\n         AND ls.sequence = qa.sequence\n        LEFT JOIN\nlearning_commontrack ct ON ct.idReference = pt.id_reference\n        AND ct.idUser = pt.id_user\n        LEFT JOIN\nlearning_organization lo ON lo.idOrg = ct.idReference\n        LEFT JOIN\nlearning_course c ON c.idCourse = lo.idCourse\n        LEFT JOIN\nlearning_category lc on lc.idCategory = c.idCategory\n        LEFT JOIN\nlearning_course_rating lcr on lcr.idCourse = c.idCourse\n       LEFT JOIN\nlearning_course_field_value lcfv on lcfv.id_course = c.idCourse\n       LEFT JOIN(\n              select count(lcu.idCourse) as completed_users, lcu.idCourse as Courseid from learning_courseuser lcu where lcu.date_complete is not null and lcu.status = 2 group by lcu.idCourse\n) comp on comp.Courseid = c.idCourse\nLEFT JOIN(\n              select count(lcu.idCourse) as enrolled_users, lcu.idCourse as Courseid from learning_courseuser lcu where (lcu.status = 0 or lcu.status = 1 or lcu.status = 2) and lcu.waiting = 0 group by lcu.idCourse\n) enrol on enrol.Courseid = c.idCourse\n where  \npt.status = 'valid'\n        AND a.id_track = pt.id_track\n        AND ct.last_complete IS NOT NULL\n        AND IF(q.type_quest = 'extended_text', 1=1 ,a.id_answer = qa.id_answer)\n        AND lo.id_object in (36,46,47,60,59,52,49,48,55,57,58,54,51,50,56,53)\n        AND pt.date_attempt is not null\n\t\tand pt.date_attempt >= NOW() - INTERVAL :DAYS_BACK DAY\n) result ORDER BY Product_ID DESC;"
    },
    {
      "sql": "select distinct lc.idCategory as c\nFROM learning_polltrack pt\nLEFT JOIN\nlearning_poll p ON p.id_poll = pt.id_poll\n        LEFT JOIN\nlearning_pollquest q ON q.id_poll = pt.id_poll\n        LEFT JOIN\ncore_user u ON u.idst = pt.id_user\n        JOIN\nlearning_polltrack_answer a ON a.id_quest = q.id_quest\n        AND a.id_track = pt.id_track\n        LEFT JOIN\nlearning_poll_likert_scale ls ON ls.id_poll = pt.id_poll\n        AND ls.id = a.more_info\n        LEFT JOIN\nlearning_pollquestanswer qa ON qa.id_quest = a.id_quest\n         AND ls.sequence = qa.sequence\n        LEFT JOIN\nlearning_commontrack ct ON ct.idReference = pt.id_reference\n        AND ct.idUser = pt.id_user\n        LEFT JOIN\nlearning_organization lo ON lo.idOrg = ct.idReference\n        LEFT JOIN\nlearning_course c ON c.idCourse = lo.idCourse\n        LEFT JOIN\nlearning_category lc on lc.idCategory = c.idCategory\n        LEFT JOIN\nlearning_course_rating lcr on lcr.idCourse = c.idCourse\n       LEFT JOIN\nlearning_course_field_value lcfv on lcfv.id_course = c.idCourse\n       LEFT JOIN(\n              select count(lcu.idCourse) as completed_users, lcu.idCourse as Courseid from learning_courseuser lcu where lcu.date_complete is not null and lcu.status = 2 group by lcu.idCourse\n) comp on comp.Courseid = c.idCourse\nLEFT JOIN(\n              select count(lcu.idCourse) as enrolled_users, lcu.idCourse as Courseid from learning_courseuser lcu where (lcu.status = 0 or lcu.status = 1 or lcu.status = 2) and lcu.waiting = 0 group by lcu.idCourse\n) enrol on enrol.Courseid = c.idCourse\n where  \npt.status = 'valid'\n        AND a.id_track = pt.id_track\n        AND ct.last_complete IS NOT NULL\n        AND IF(q.type_quest = 'extended_text', 1=1 ,a.id_answer = qa.id_answer)\n        AND lo.id_object in (36,46,47,60,59,52,49,48,55,57,58,54,51,50,56,53)\n        AND pt.date_attempt is not null\n\t\tand pt.date_attempt >= NOW() - INTERVAL 90 DAY"
    },
    {
      "sql": "SELECT\n\tCOURSE_NAME AS 'Course Name',\n    Course_Internal_ID AS 'Course Internal ID',\n    Course_Unique_ID AS 'Course Unique ID',\n    Product_ID AS 'Product ID',\n    Language,\n\tCOMPLETED_USERS_STATUS AS 'Completed User Status',\n\tENROLLED_USER AS 'Enrolled User',\n        Course_Rating AS 'Course Rating',\nRELEASE_DATE AS 'Release date',\n    LAST_UPDATE AS 'Last update',\n    Date_of_Submission AS 'Date of Submission',\nQuestion,\nAnswer\nFROM\n(\nSELECT \nc.name AS COURSE_NAME,\nc.idCourse AS Course_Internal_ID,\n    c.uidCourse AS Course_Unique_ID,\n    c.code AS Product_ID,\n    c.lang_code AS Language,\nIFNULL(comp.completed_users, 0) as COMPLETED_USERS_STATUS,\nIFNULL(enrol.enrolled_users, 0) as ENROLLED_USER,\nIFNULL(lcr.rate_average, 'N/A') as Course_Rating,\n    lcfv.field_20 as RELEASE_DATE,\n    lcfv.field_45 as LAST_UPDATE,\n    COALESCE(DATE_FORMAT(pt.date_attempt, '%c/%e/%Y'),'') AS Date_of_Submission,\nConcat(Concat(q.title_quest, ' / '), (CASE\n        WHEN q.type_quest = 'likert_scale' THEN qa.answer\n        ELSE q.title_quest\n    END)) AS 'Question',\n(CASE\nWhen q.type_quest = 'likert_scale' THEN ls.title\nWHEN q.type_quest = 'extended_text' THEN a.more_info\nELSE qa.answer\nEND) AS Answer\nFROM learning_polltrack pt\nLEFT JOIN\nlearning_poll p ON p.id_poll = pt.id_poll\n        LEFT JOIN\nlearning_pollquest q ON q.id_poll = pt.id_poll\n        LEFT JOIN\ncore_user u ON u.idst = pt.id_user\n        JOIN\nlearning_polltrack_answer a ON a.id_quest = q.id_quest\n        AND a.id_track = pt.id_track\n        LEFT JOIN\nlearning_poll_likert_scale ls ON ls.id_poll = pt.id_poll\n        AND ls.id = a.more_info\n        LEFT JOIN\nlearning_pollquestanswer qa ON qa.id_quest = a.id_quest\n         AND ls.sequence = qa.sequence\n        LEFT JOIN\nlearning_commontrack ct ON ct.idReference = pt.id_reference\n        AND ct.idUser = pt.id_user\n        LEFT JOIN\nlearning_organization lo ON lo.idOrg = ct.idReference\n        LEFT JOIN\nlearning_course c ON c.idCourse = lo.idCourse\n        LEFT JOIN\nlearning_course_rating lcr on lcr.idCourse = c.idCourse\n       LEFT JOIN\nlearning_course_field_value lcfv on lcfv.id_course = c.idCourse\n       LEFT JOIN(\n              select count(lcu.idCourse) as completed_users, lcu.idCourse as Courseid from learning_courseuser lcu where lcu.date_complete is not null and lcu.status = 2 group by lcu.idCourse\n) comp on comp.Courseid = c.idCourse\nLEFT JOIN(\n              select count(lcu.idCourse) as enrolled_users, lcu.idCourse as Courseid from learning_courseuser lcu where (lcu.status = 0 or lcu.status = 1 or lcu.status = 2) and lcu.waiting = 0 group by lcu.idCourse\n) enrol on enrol.Courseid = c.idCourse\n where  \npt.status = 'valid'\n        AND a.id_track = pt.id_track\n        AND ct.last_complete IS NOT NULL\n        AND IF(q.type_quest = 'extended_text', 1=1 ,a.id_answer = qa.id_answer)\n        AND lo.id_object in (36,46,47,60,59,52,49,48,55,57,58,54,51,50,56,53)\n        AND pt.date_attempt is not null\n\t\tand pt.date_attempt >= NOW() - INTERVAL :DAYS_BACK DAY\n) result ORDER BY Product_ID DESC;"
    },
    {
      "sql": "SELECT idOrg, idParent, idst_oc, idst_ocd\nfrom core_org_chart_tree\nWHERE idOrg = 3031"
    },
    {
      "sql": "\n\nSELECT lc.CODE AS COURSECODE\nFROM\nlearning_course lc\nLEFT JOIN (\n                select lcat.name as catalog,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nWHERE\ncats.catalog = 'Aberdeen Asset Managers: Course Catalogue';\n"
    },
    {
      "sql": "select UserName, FirstName, LastName, Email, CourseName, ActiveFrom, CompletionDate,\nstatus,\nEmployeeID,\nExternalCourseID,\nCPDType\nfrom ( select distinct\nREPLACE(coreuser.userid, '/', '') as UserName,\ncoreuser.firstname as FirstName,\ncoreuser.lastname as LastName,\ncoreuser.email as Email,\ncufv.field_166 as EmployeeID,\nlc.name as CourseName,\nDATE_FORMAT(lcu.date_first_access, \%d-%m-%Y %H:%i\") as ActiveFrom,\nDATE_FORMAT(lcu.date_complete, \"%d-%m-%Y %H:%i\") as CompletionDate,\ncase when lcu.status='2' then 'Completed' else '0' end as Status,\nlcfv.field_32 as  ExternalCourseID,\nlcfv.field_33 as CPDType\n      from\n      learning_courseuser lcu\n      Inner join core_user coreuser\n      on coreuser.idst = lcu.idUser\n      LEFT OUTER JOIN core_group_members groupmembers\n      ON coreuser.idst = groupmembers.idstMember\n      INNER JOIN core_org_chart_tree chartTree\n      ON groupmembers.idst = chartTree.idst_oc\n      INNER JOIN core_org_chart orgChart\n      ON chartTree.idOrg = orgChart.id_dir\n      INNER JOIN core_user_field_value cufv\n      ON coreuser.idst = cufv.id_user\n      LEFT JOIN  core_country cc on cc.id_country = cufv.field_463\n      inner join learning_course_field_value lcfv on lcfv.id_course = lcu.idCourse\n\tinner join learning_course lc \n      on lc.idCourse = lcu.idCourse\nLEFT JOIN (\n\tselect lcat.name as catalog,  lco.idCourse\n\tfrom learning_catalogue lcat\n\tinner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n\tinner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nLEFT JOIN (\n\tselect idOrg, lev, idParent, iLeft, iRight, cu.idst from core_org_chart_tree coct\n\tLEFT JOIN core_group_members cgm on coct.idst_oc = cgm.idst\n\tleft join core_user cu on cu.idst = cgm.idstMember\n ) branch on branch.idst = coreuser.idst\n\nwhere \ncats.catalog = 'Aberdeen Asset Managers: Course Catalogue' and\nbranch.iLeft > (select iLeft from core_org_chart_tree where idOrg=3031) and\nbranch.iRight < (select iRight from core_org_chart_tree where idOrg=3031) and\nlcu.status = '2'\nand cufv.field_838 !='Contingent Worker'\nand lcu.date_complete >=  DATE_SUB(DATE(NOW()), INTERVAL :DAYS_BACK DAY) \n)\nResult order by UserName"
    },
    {
      "sql": "SELECT \nCOMPANY, \n\t\tSUM(case when pCategoryID = 651 then 1 else 0 END) as MarketReadycourses_AllTime,\n        SUM(CASE WHEN (pCategoryID = 651 and enrollmentDate >=  DATE_SUB(DATE(NOW()), INTERVAL 365 DAY)) THEN 1 else 0 end) as MarketReadyCourses_365days,\n        SUM(case when pCategoryID = 65 then 1 else 0 END) as RetiredMarketReadycourses_AllTime,\n        SUM(CASE WHEN (pCategoryID = 65 and enrollmentDate >=  DATE_SUB(DATE(NOW()), INTERVAL 365 DAY)) THEN 1 else 0 end) as RetiredMarketReadyCourses_365days,\n        SUM(case when pCategoryID = 13 then 1 else 0 END) as CustomCourses_AllTime,\n        SUM(CASE WHEN (pCategoryID = 13 and enrollmentDate >=  DATE_SUB(DATE(NOW()), INTERVAL 365 DAY)) THEN 1 else 0 end) as CustomCourses_365days\n        \n        from (\n\t\tSELECT COMPANY,\n        pCategoryID, \n        PRODUCT_ID,\n        enrollmentDate\n\t\tFROM ( \n\n\t\t\tSELECT DISTINCT\n\t\t\tparentBranch.idOrg AS PARENT_ID,\n\t\t\tparentBranch.code AS PARENT_CODE,\n\t\t\tcoc.translation AS COMPANY,\n\t\t\tlc.name AS PRODUCT_NAME,\n                        lc.code AS PRODUCT_ID,\n                        cats.pCategoryID as pCategoryID,\n                        lcu.date_inscr as enrollmentDate\n\n\t\t\tFROM core_org_chart_tree AS childBranch\n\t\t\tINNER JOIN core_org_chart_tree AS parentBranch ON childBranch.iLeft >= parentBranch.iLeft AND childBranch.iRight <= parentBranch.iRight\n\t\t\tINNER JOIN core_org_chart coc ON parentBranch.idOrg = coc.id_dir AND coc.lang_code = 'english_uk'\n\t\t\tLEFT JOIN core_group_members cgm ON cgm.idst = childBranch.idst_oc\n\t\t\tLEFT JOIN learning_courseuser lcu ON lcu.idUser = cgm.idstMember\n\t\t\tINNER JOIN learning_course lc ON lc.idCourse = lcu.idCourse\n            left join (select distinct lcat.translation as translation, lcat.idCategory as categoryID, childTree.idCategory as cCategoryID, \n            parentTree.idCategory as pCategoryID from learning_category lcat\n\t\t\tinner join learning_category_tree childTree on lcat.idCategory = childTree.idCategory\n\t\t\tinner join learning_category_tree parentTree on childTree.iLeft >= parentTree.iLeft AND childTree.iRight <= parentTree.iRight\n\t\t\twhere parentTree.lev = 2 AND parentTree.idCategory in (13, 65, 651)\n            )cats on lc.idCategory = cats.categoryID\n\t\t\tWHERE parentBranch.lev = 2\n\t\t\tAND parentBranch.idOrg != 'Root2'\n\t\t\tAND coc.translation NOT LIKE '00.%'\n\t\t) RESULT\n\t\tGROUP BY COMPANY, pCategoryID, PRODUCT_ID) RESULT_1\n        Group by COMPANY, pCategoryID having pCategoryID in (13, 65, 651)"
    },
    {
      "sql": "select \n   username as 'user name',\n   COURSENAME AS 'Course Name',\n    Course_Category AS 'Course Category',\n    Course_Internal_ID AS 'Course Internal ID',\n    Course_Unique_ID AS 'Course Unique ID',\n    ProductID AS 'Product ID',\n    Language,\n\tCOMPLETED_USERS_STATUS AS 'Completed User Status',\n\tENROLLED_USER AS 'Enrolled Users',\n        Course_Rating AS 'Course Rating',\nRELEASE_DATE AS 'Release date',\n    LAST_UPDATE AS 'Last update',\n    Survey_name as 'survey Name',\n    Date_of_Submission AS 'Date of Submission',\nQuestion,\nAnswer\n from \n(SELECT distinct\n    REPLACE(u.userid, '/', '') AS 'Username',\n\tIFNULL(comp.completed_users, 0) as COMPLETED_USERS_STATUS,\n\tIFNULL(enrol.enrolled_users, 0) as ENROLLED_USER,\n    c.name AS 'CourseName',\n    COALESCE(c.idCourse, '') AS Course_Internal_ID,\n    COALESCE(c.uidCourse, '') AS Course_Unique_ID,\n    c.code AS 'ProductId',\n\tCOALESCE(lc.translation, '') AS Course_Category,\n         COALESCE(c.lang_code, '') AS Language,\n\tIFNULL(lcr.rate_average, 'N/A') as Course_Rating,\n\tlcfv.field_20 as RELEASE_DATE,\n    lcfv.field_45 as LAST_UPDATE,\n    p.title AS 'Survey_Name',\n   COALESCE(DATE_FORMAT(pt.date_attempt, '%c/%e/%Y'),'') AS Date_of_Submission,\n    REPLACE(REPLACE(q.title_quest, '<p>', ''),\n        '</p>',\n        '') AS 'Question_Title',\n    q.type_quest AS 'Question_type',\n    (CASE\n        WHEN q.type_quest = 'likert_scale' THEN qa.answer\n        ELSE REPLACE(REPLACE(q.title_quest, '<p>', ''),\n            '</p>',\n            '')\n    END) AS 'Question',\n    (CASE\n        WHEN q.type_quest = 'likert_scale' THEN ls.title\n        WHEN\n            q.type_quest = 'extended_text'\n        THEN\n            REPLACE(REPLACE(a.more_info, '<p>', ''),\n                '</p>',\n                '')\n        ELSE qa.answer\n    END) AS 'Answer'\nFROM\n    learning_polltrack pt\n        LEFT JOIN\n    learning_poll p ON p.id_poll = pt.id_poll\n        LEFT JOIN\n    learning_pollquest q ON q.id_poll = pt.id_poll\n        LEFT JOIN\n    core_user u ON u.idst = pt.id_user\n        JOIN\n    learning_polltrack_answer a ON a.id_quest = q.id_quest\n        AND a.id_track = pt.id_track\n        LEFT JOIN\n    learning_poll_likert_scale ls ON ls.id_poll = pt.id_poll\n        AND ls.id = a.more_info\n        LEFT JOIN\n    learning_pollquestanswer qa ON qa.id_quest = a.id_quest\n        LEFT JOIN\n    learning_commontrack ct ON ct.idReference = pt.id_reference\n        AND ct.idUser = pt.id_user\n        LEFT JOIN\n    learning_organization lo ON lo.idOrg = ct.idReference\n        LEFT JOIN\n    learning_course c ON c.idCourse = lo.idCourse\n\tLEFT JOIN\nlearning_category lc on lc.idCategory = c.idCategory\n        LEFT JOIN\nlearning_course_rating lcr on lcr.idCourse = c.idCourse\n       LEFT JOIN\nlearning_course_field_value lcfv on lcfv.id_course = c.idCourse\nLEFT JOIN(\n              select count(lcu.idCourse) as completed_users, lcu.idCourse as Courseid from learning_courseuser lcu where lcu.date_complete is not null and lcu.status = 2 group by lcu.idCourse\n) comp on comp.Courseid = c.idCourse\nLEFT JOIN(\n              select count(lcu.idCourse) as enrolled_users, lcu.idCourse as Courseid from learning_courseuser lcu where (lcu.status = 0 or lcu.status = 1 or lcu.status = 2) and lcu.waiting = 0 group by lcu.idCourse\n) enrol on enrol.Courseid = c.idCourse\nWHERE\n    pt.date_attempt BETWEEN DATE_SUB(NOW(), INTERVAL :days DAY) AND NOW()\n    and pt.status = 'valid'\n        AND a.id_track = pt.id_track\n        AND ct.last_complete IS NOT NULL\n        AND IF(q.type_quest = 'extended_text', 1=1 ,a.id_answer = qa.id_answer)\n        AND lo.id_object in (36,46,47,60,59,52,49,48,55,57,58,54,51,50,56,53)\n        AND pt.date_attempt is not null\nAND lc.translation is not null \nand lc.lang_code='english_uk') x\nwhere Course_Category is not null and Course_Category != ''\nORDER BY Date_of_Submission DESC;"
    },
    {
      "sql": "select date_attempt from learning_polltrack pt\nwhere pt.date_attempt > :date_end"
    },
    {
      "sql": "select substring(userid,2)\tas userid,  \nfirstname\t,\nlastname\t,\nemail\nfrom core_user cu\nwhere  cu.valid = 1\n  and cu.level = 4\n"
    },
    {
      "sql": "SELECT\n  StatementId,\n  Verb,\n  json_data,\n  MBox,\n  RegistrationId,\n  lc.idCourse as CourseId,\n  lc.code as CourseCode,\n  lc.name as CourseName\nFROM\n  (\n    SELECT\n      DISTINCT lrs.verb as Verb,\n      lrs.id_statement AS StatementId,\n      lrs.json_data AS json_data,\n      REPLACE(\n        REPLACE(\n          json_extract(json_extract(lrs.json_data, \$.actor\"), \"$.mbox\"),\n          \"\"\",\n          \"\"\n        ),\n        \"mailto:\",\n        \"\"\n      ) AS MBox,\n      REPLACE(\n        json_extract(\n          json_extract(lrs.json_data, \"$.context\"),\n          \"$.registration\"\n        ),\n        \"\"\",\n        \"\"\n      ) AS RegistrationId\n    FROM\n      lrs_statement lrs\n    WHERE\n     json_extract(\n          json_extract(lrs.json_data, \"$.context\"),\n          \"$.registration\"\n        ) = \"8b635ca2-c316-4cec-b683-3fe3bbeee0ab\"\n    LIMIT\n      100\n  ) lrs_result\n  INNER JOIN learning_tc_ap ltap ON ltap.registration = lrs_result.RegistrationId\n  INNER JOIN learning_tc_activity ltac ON ltac.id_tc_ap = ltap.id_tc_ap\n  INNER JOIN learning_organization lo ON lo.idResource = ltac.id_tc_activity\n  INNER JOIN learning_course lc ON lc.idCourse = lo.idCourse\n  ORDER BY CourseId\n"
    },
    {
      "sql": "SELECT CourseName,\nCourseProductID,\nCourseUniqueID,\nCourseCategory,\nCourseCertificateAssociated\nfrom\n(select distinct\nc.name as CourseName,\nc.code as CourseProductID,\nc.idCourse as CourseUniqueID,\nResult2.code as CourseCategory,\nlc.name as CourseCertificateAssociated\n\nfrom learning_certificate_assign lca \ninner join \nlearning_certificate lc \non lc.id_certificate = lca.id_certificate\ninner join \nlearning_course c\non c.idCourse = lca.id_course\ninner join\n(select distinct lcat.code as code, lcat.idCategory as categoryID, childTree.idCategory as cCategoryID,\n parentTree.idCategory as pCategoryID from learning_category lcat\ninner join learning_category_tree childTree on lcat.idCategory = childTree.idCategory\ninner join learning_category_tree parentTree on childTree.iLeft >= parentTree.iLeft AND childTree.iRight <= parentTree.iRight\nwhere parentTree.lev = 2)Result2\non Result2.categoryID = c.idCategory) result"
    },
    {
      "sql": "SELECT \nidst, userid, firstname, lastname, email, register_date\n\nFROM core_user\n\nWHERE idst NOT IN \n(\n  SELECT id_user\n  FROM \n  core_setting_user \n  WHERE  path_name = 'date_format' \n)\nAND\nregister_date BETWEEN :startDate AND :endDate\n"
    },
    {
      "sql": "SELECT cu.firstname AS FirstName, \n\t   cu.lastname AS LastName, \n\t   cu.email AS email, \n\t   parentBranch.path AS branch_path,\n\t   parentBranch.code AS branch_name,\n\t   lcu.date_inscr as enrollmentDate\nFROM core_org_chart_tree AS childBranch\nINNER JOIN core_org_chart_tree AS parentBranch ON childBranch.iLeft >= parentBranch.iLeft\nAND childBranch.iRight <= parentBranch.iRight\nLEFT JOIN core_group_members cgm ON cgm.idst = childBranch.idst_oc\nLEFT JOIN core_user cu ON cu.idst = cgm.idstMember\nLEFT JOIN learning_courseuser lcu ON lcu.idUser = cu.idst\nWHERE lcu.idUser is NULL\n\n\n"
    },
    {
      "sql": "select \n\n\nlc.name AS CourseName,\nlc.code AS CourseProductID, \nlc.idCourse AS IDCourse\n\nfrom learning_course lc \n\n"
    },
    {
      "sql": "SELECT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nFROM\n(\nselect DISTINCT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nfrom\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\cmi.core.lesson_status\"')) AS Cmi_lesson_status,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_id\"')) AS Cmi_student_id,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_name\"')) AS Cmi_student_name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_location\"')) AS Cmi_lesson_location,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.suspend_data\"')) AS Cmi_suspend_data,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.score.raw\"')) AS Cmi_raw_score \nfrom core_user cu\n\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t  INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n\t\t\t  INNER JOIN core_org_chart orgChart ON chartTree.idOrg = orgChart.id_dir\n\t\t\t  WHERE orgChart.lang_code = 'english'\n\t\t\t\tAND  chartTree.iLeft >= (select iLeft from core_org_chart_tree where idOrg IN (3031))\n\t\t\t    AND chartTree.iRight <= (select iRight from core_org_chart_tree where idOrg IN (3031))\n\t\t\t) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode1,'%')  OR  lc.code = :CourseCode1 OR lc.code = :CourseCode2  OR lc.code = :CourseCode3 OR lc.code = :CourseCode4 OR lc.code = :CourseCode5\nand lo.title = lc.name and cats.catalogId = 57 and\nlst.xmldata is not null and JSON_VALID(convert(lst.xmldata using utf8))=1\n) result1 WHERE Enrollment_Status IN ('Enrolled','Subscription to Confirm')\n\nUNION\n\n\nselect DISTINCT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nfrom\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_status\"')) AS Cmi_lesson_status,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_id\"')) AS Cmi_student_id,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_name\"')) AS Cmi_student_name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_location\"')) AS Cmi_lesson_location,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.suspend_data\"')) AS Cmi_suspend_data,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.score.raw\"')) AS Cmi_raw_score \nfrom core_user cu\n\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t  INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n\t\t\t  INNER JOIN core_org_chart orgChart ON chartTree.idOrg = orgChart.id_dir\n\t\t\t  WHERE orgChart.lang_code = 'english'\n\t\t\t\tAND  chartTree.iLeft >= (select iLeft from core_org_chart_tree where idOrg IN (3031))\n\t\t\t    AND chartTree.iRight <= (select iRight from core_org_chart_tree where idOrg IN (3031))\n\t\t\t) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId  , lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode1,'%')  OR   lc.code = :CourseCode1 OR lc.code = :CourseCode2  OR lc.code = :CourseCode3 OR lc.code = :CourseCode4 OR lc.code = :CourseCode5\nand lo.title = lc.name and cats.catalogId = 57 and\nlst.xmldata is not null and JSON_VALID(convert(lst.xmldata using utf8))=1\n) result2 WHERE Enrollment_Status IN ('In Progress','Completed') \n) fresult\nwhere Enrollment_Status = 'Enrolled' or ((Enrollment_Status = 'Completed' or Enrollment_Status = 'In Progress') and Cmi_student_name is not null and Cmi_student_name != '')\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "SELECT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nFROM\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\cmi.core.lesson_status\"')) AS Cmi_lesson_status,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_id\"')) AS Cmi_student_id,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_name\"')) AS Cmi_student_name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_location\"')) AS Cmi_lesson_location,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.suspend_data\"')) AS Cmi_suspend_data,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.score.raw\"')) AS Cmi_raw_score \nfrom core_user cu\n\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t  INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n\t\t\t  INNER JOIN core_org_chart orgChart ON chartTree.idOrg = orgChart.id_dir\n\t\t\t  WHERE orgChart.lang_code = 'english'\n\t\t\t\tAND  chartTree.iLeft >= (select iLeft from core_org_chart_tree where idOrg IN (3031))\n\t\t\t    AND chartTree.iRight <= (select iRight from core_org_chart_tree where idOrg IN (3031))\n\t\t\t) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode1,'%')  OR  lc.code = :CourseCode1 OR lc.code = :CourseCode2  OR lc.code = :CourseCode3 OR lc.code = :CourseCode4 OR lc.code = :CourseCode5\nand lo.title = lc.name and cats.catalogId = 57 and lc.idCategory in (141,142) and\nlst.xmldata is not null and JSON_VALID(convert(lst.xmldata using utf8))=1 ) as result1\nwhere Enrollment_Status = 'Completed' and Cmi_student_name is not null and Cmi_student_name != ''\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "select coct.idOrg as \Branch Id\", cu.idst as \"User Id\", REPLACE(cu.userid, '/', '') as \"User Name\", cu.firstname as \"First Name\", lastname as \"Last Name\"\nfrom core_org_chart_tree coct\ninner join core_org_chart cog on coct.idOrg = cog.id_dir and cog.lang_code = 'English'\ninner join core_group_members cgm on cgm.idst = coct.idst_oc\ninner join core_user cu on cu.idst = cgm.idstMember\nwhere coct.idOrg !=0  ;"
    },
    {
      "sql": "SELECT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nFROM\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\cmi.core.lesson_status\"')) AS Cmi_lesson_status,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_id\"')) AS Cmi_student_id,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_name\"')) AS Cmi_student_name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_location\"')) AS Cmi_lesson_location,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.suspend_data\"')) AS Cmi_suspend_data,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.score.raw\"')) AS Cmi_raw_score \nfrom core_user cu\n\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t  INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n\t\t\t  INNER JOIN core_org_chart orgChart ON chartTree.idOrg = orgChart.id_dir\n\t\t\t  WHERE orgChart.lang_code = 'english'\n\t\t\t\tAND  chartTree.iLeft >= (select iLeft from core_org_chart_tree where idOrg IN (9353))\n\t\t\t    AND chartTree.iRight <= (select iRight from core_org_chart_tree where idOrg IN (9353))\n\t\t\t) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode1,'%')  OR  lc.code = :CourseCode1 OR lc.code = :CourseCode2  OR lc.code = :CourseCode3 OR lc.code = :CourseCode4 OR lc.code = :CourseCode5\nand lo.title = lc.name and cats.catalogId = 57 and lc.idCategory in (141,142) and\nlst.xmldata is not null and JSON_VALID(convert(lst.xmldata using utf8))=1 ) as result1\nwhere Enrollment_Status = 'Completed' and Cmi_student_name is not null and Cmi_student_name != ''\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "SELECT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nFROM\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\cmi.core.lesson_status\"')) AS Cmi_lesson_status,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_id\"')) AS Cmi_student_id,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_name\"')) AS Cmi_student_name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_location\"')) AS Cmi_lesson_location,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.suspend_data\"')) AS Cmi_suspend_data,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.score.raw\"')) AS Cmi_raw_score \nfrom core_user cu\n\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t  INNER JOIN core_org_chart_tree chartTree ON groupmembers.idst = chartTree.idst_oc\n\t\t\t  INNER JOIN core_org_chart orgChart ON chartTree.idOrg = orgChart.id_dir\n\t\t\t  WHERE orgChart.lang_code = 'english'\n\t\t\t\tAND  chartTree.iLeft >= (select iLeft from core_org_chart_tree where idOrg IN (9370))\n\t\t\t    AND chartTree.iRight <= (select iRight from core_org_chart_tree where idOrg IN (9370)) \n\t\t\t) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode1,'%')  OR  lc.code = :CourseCode1 OR lc.code = :CourseCode2  OR lc.code = :CourseCode3 OR lc.code = :CourseCode4 OR lc.code = :CourseCode5\nand lo.title = lc.name and cats.catalogId = 57 and lc.idCategory in (141,142) and\nlst.xmldata is not null and JSON_VALID(convert(lst.xmldata using utf8))=1 ) as result1\nwhere Enrollment_Status = 'Completed' and Cmi_student_name is not null and Cmi_student_name != ''\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "SELECT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nFROM\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\cmi.core.lesson_status\"')) AS Cmi_lesson_status,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_id\"')) AS Cmi_student_id,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_name\"')) AS Cmi_student_name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_location\"')) AS Cmi_lesson_location,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.suspend_data\"')) AS Cmi_suspend_data,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.score.raw\"')) AS Cmi_raw_score \nfrom core_user cu\n\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t\n\t\t\t  WHERE groupmembers.idst = 1513746) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode1,'%')  OR  lc.code = :CourseCode1 OR lc.code = :CourseCode2  OR lc.code = :CourseCode3 OR lc.code = :CourseCode4 OR lc.code = :CourseCode5\nand lo.title = lc.name and cats.catalogId = 57 and lc.idCategory in (141,142) and\nlst.xmldata is not null and JSON_VALID(convert(lst.xmldata using utf8))=1 ) as result1\nwhere Enrollment_Status = 'Completed' and Cmi_student_name is not null and Cmi_student_name != ''\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "SELECT t.idOrg AS 'Branch id',\no.translation AS 'Branch name',\nt.code AS 'Branch code',\nt.idParent AS 'Parent id',\nt.lev AS 'Level'\nFROM core_org_chart_tree t\nLEFT JOIN core_org_chart o ON o.id_dir = t.idOrg AND o.lang_code = 'english'\nORDER BY 5, 4, 1;"
    },
    {
      "sql": "SELECT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nFROM\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\cmi.core.lesson_status\"')) AS Cmi_lesson_status,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_id\"')) AS Cmi_student_id,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_name\"')) AS Cmi_student_name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_location\"')) AS Cmi_lesson_location,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.suspend_data\"')) AS Cmi_suspend_data,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.score.raw\"')) AS Cmi_raw_score \nfrom core_user cu\n\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t\n\t\t\t  WHERE groupmembers.idst = 1568845) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode1,'%')  OR  lc.code = :CourseCode1 OR lc.code = :CourseCode2  OR lc.code = :CourseCode3 OR lc.code = :CourseCode4 OR lc.code = :CourseCode5\nand lo.title = lc.name and cats.catalogId = 57 and lc.idCategory in (141,142) and\nlst.xmldata is not null and JSON_VALID(convert(lst.xmldata using utf8))=1 ) as result1\nwhere Enrollment_Status = 'Completed' and Cmi_student_name is not null and Cmi_student_name != ''\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "SELECT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nFROM\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\cmi.core.lesson_status\"')) AS Cmi_lesson_status,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_id\"')) AS Cmi_student_id,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_name\"')) AS Cmi_student_name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_location\"')) AS Cmi_lesson_location,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.suspend_data\"')) AS Cmi_suspend_data,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.score.raw\"')) AS Cmi_raw_score \nfrom core_user cu\n\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t\n\t\t\t  WHERE groupmembers.idst = 1577079) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode1,'%')  OR  lc.code = :CourseCode1 OR lc.code = :CourseCode2  OR lc.code = :CourseCode3 OR lc.code = :CourseCode4 OR lc.code = :CourseCode5\nand lo.title = lc.name and cats.catalogId = 57 and lc.idCategory in (141,142) and\nlst.xmldata is not null and JSON_VALID(convert(lst.xmldata using utf8))=1 ) as result1\nwhere Enrollment_Status = 'Completed' and Cmi_student_name is not null and Cmi_student_name != ''\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "SELECT\nUsername,\nFirst_Name,\nLast_Name,\nDepartment,\nStart_date,\nCourse_Product_ID,\nCourse_Name,\nEnrollment_Status,\nCompletion_date,\nFinal_Score,\nCmi_lesson_status,\nCmi_student_id,\nCmi_student_name,\nCmi_lesson_location,\nCmi_suspend_data,\nCmi_raw_score,\nRegion,\nDivision,\nCountry\n\nFROM\n(\nselect DISTINCT\nSUBSTR(cu.userid,2) as Username,\ncu.firstname AS First_Name,\ncu.lastname AS Last_Name,\nCOALESCE(cufv.field_265,'') AS Department,\nCASE\n\t\t\tWHEN lcu.status=0 THEN 'Enrolled'\n\t\t\tWHEN lcu.status=1 THEN 'In Progress'\n\t\t\tWHEN lcu.status=2 THEN 'Completed'\n\t\t\tWHEN lcu.status=3 THEN 'Suspended'\n\t\t\tWHEN lcu.status=4 THEN 'Overbooking'\n\t\t\tWHEN lcu.status=-1 THEN 'Subscription to Confirm'\n\t\tEND AS Enrollment_Status,\nlc.name as Course_Name,\nlc.code AS Course_Product_ID,\nlcu.score_given as Final_Score,\nDATE_FORMAT(lcu.date_complete, '%Y-%m-%d') as Completion_date,\nDATE_FORMAT(lcu.date_inscr, '%Y-%m-%d') as Start_date,\ncufv.field_833 as Region,\ncufv.field_835 as Country,\ncufv.field_837 as Division,\ncufv.field_298 as Manager_Name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\cmi.core.lesson_status\"')) AS Cmi_lesson_status,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_id\"')) AS Cmi_student_id,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.student_name\"')) AS Cmi_student_name,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.lesson_location\"')) AS Cmi_lesson_location,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.suspend_data\"')) AS Cmi_suspend_data,\nJSON_UNQUOTE(JSON_EXTRACT(convert(lst.xmldata using utf8), '$.\"cmi.core.score.raw\"')) AS Cmi_raw_score \nfrom core_user cu\n\nLEFT JOIN (SELECT lcu1.status,\n                   lcu1.idCourse,\n\t\t\t\t   lcu1.idUser, lcu1.score_given, lcu1.date_complete,lcu1.date_inscr\n              FROM learning_courseuser lcu1 \n\t\t\t  INNER JOIN core_user cu1 ON lcu1.idUser = cu1.idst\n\t\t\t  INNER JOIN core_group_members groupmembers ON cu1.idst = groupmembers.idstMember\n\t\t\t\n\t\t\t  WHERE groupmembers.idst = 1577081) lcu on lcu.idUser = cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n                select lcat.name as catalog, lce.idCatalogue as catalogId,  lco.idCourse\n                from learning_catalogue lcat\n                inner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n                inner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\n\n\nLEFT JOIN core_user_field_value cufv ON cu.idst = cufv.id_user\nLEFT JOIN learning_organization lo ON lo.idCourse = lc.idCourse\nLEFT JOIN learning_commontrack ct ON ct.idReference = lo.idOrg and ct.idUser = lcu.idUser\nLEFT JOIN learning_scorm_tracking lst ON lst.idReference = ct.idReference AND lst.idUser = ct.idUser\nWHERE lc.code LIKE CONCAT('%',:CourseCode1,'%')  OR  lc.code = :CourseCode1 OR lc.code = :CourseCode2  OR lc.code = :CourseCode3 OR lc.code = :CourseCode4 OR lc.code = :CourseCode5\nand lo.title = lc.name and cats.catalogId = 57 and lc.idCategory in (141,142) and\nlst.xmldata is not null and JSON_VALID(convert(lst.xmldata using utf8))=1 ) as result1\nwhere Enrollment_Status = 'Completed' and Cmi_student_name is not null and Cmi_student_name != ''\norder by Region, Division, Country, Username;"
    },
    {
      "sql": "SELECT\na.code as 'name',\nrecipient as 'target user',\nc.NAME as 'type',\na.active as 'active'\nFROM core_notification a\nLEFT JOIN core_notification_transport_activation b\nON b.notification_id = a.id\nLEFT JOIN core_notification_transport c\nON b.transport_id = c.id\nLEFT JOIN core_notification_user_filter d\nON d.id = a.id\nLEFT JOIN core_notification_assoc e\nON e.id = a.id\nWHERE recipient = 'godadmin'"
    },

  ]
}

