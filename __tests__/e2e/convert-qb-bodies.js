module.exports = {
  "bodyArray" : [
    {
      "sql": "SELECT date(dateAttempt), hour(dateAttempt), count(distinct idUser), count(*) as los  FROM learning_commontrack  WHERE date(dateAttempt) >= DATE(NOW()) - INTERVAL 7 DAY  AND objectType = 1  GROUP BY hour(dateAttempt), date(dateAttempt)  ORDER BY  date(dateAttempt), hour(dateAttempt)"
    },
    {
      "sql": "SELECT COMPANY,\nPRODUCT_ID,\nCOURSE_NAME,\nCOUNT(*) AS NUMBER_OF_ASSIGNMENTS\nFROM(\n\n\tSELECT DISTINCT\n\tparentBranch.idOrg as PARENT_ID,\n\tparentBranch.code as PARENT_CODE,\n\tcoc.translation as COMPANY,\n\tcu.idst as USER_ID,\n\tcu.userid as USER_NAME,\n  lc.code as PRODUCT_ID,\n\tlc.name as COURSE_NAME\n\n\tFROM core_org_chart_tree AS childBranch\n\tINNER JOIN core_org_chart_tree AS parentBranch on childBranch.iLeft >= parentBranch.iLeft AND childBranch.iRight <= parentBranch.iRight\n\tINNER JOIN core_org_chart coc ON parentBranch.idOrg = coc.id_dir and coc.lang_code = 'english_uk'\n\tLEFT JOIN core_group_members cgm on cgm.idst = childBranch.idst_oc\n\tLEFT JOIN core_user cu on cu.idst = cgm.idstMember\n\tLEFT JOIN learning_courseuser lcu on lcu.idUser = cu.idst\n\tINNER JOIN learning_course lc on lc.idCourse = lcu.idCourse\n\tWHERE parentBranch.lev = 2\n\tAND coc.translation NOT LIKE '00.%'\n) RESULT\ngroup by COMPANY, PRODUCT_ID, COURSE_NAME\norder by COMPANY ASC, COURSE_NAME ASC, PRODUCT_ID"
    },
    {
      "sql": "select idorg, code, translation, level,idParent,members, active, inactive from \n(select idorg,code,translation,lev as level,idParent,count(idstmember) as members, count(if(valid=1,1,null)) 'Active', count(if(valid=0,1,null)) 'Inactive'\nfrom (select idorg,code,translation,idst_oc,lev,idParent from core_org_chart_tree x1  \nINNER JOIN core_org_chart oc on x1.idOrg=oc.id_dir where lang_code='english') sub1 \nLEFT JOIN (select cgm.idstMember,cgm.idst, valid\n from core_group_members cgm left join core_user cu on cu.idst = cgm.idstMember) x2 on sub1.idst_oc = x2.idst  \n group by idorg order by idParent,level) a;"
    },
    {
      "sql": "Select idcourse as COURSEID, code AS CODE, name AS NAME, max_num_subscribe AS MAX_NUM_SUBSCRIBE from learning_course where max_num_subscribe != 0;"
    },
    {
      "sql": "select userid,name as course_name,code,score_given from learning_courseuser lcu \n    inner join learning_course lc on lc.idCourse=lcu.idCourse\n    INNER JOIN core_user cu ON lcu.idUser = cu.idst\n    where lcu.status=2 and score_given = 0 and code like 'ALMS_%' and code != 'ALMS_100076736' and code != 'ALMS_100077561';"
    },
    {
      "sql": "SELECT COMPANY,\nPRODUCT_ID,\nCOURSE_NAME,\nCOUNT(*) AS NUMBER_OF_ASSIGNMENTS\nFROM(\n\n\tSELECT DISTINCT\n\tparentBranch.idOrg as PARENT_ID,\n\tparentBranch.code as PARENT_CODE,\n\tcoc.translation as COMPANY,\n\tcu.idst as USER_ID,\n\tcu.userid as USER_NAME,\n  lc.code as PRODUCT_ID,\n\tlc.name as COURSE_NAME\n\n\tFROM core_org_chart_tree AS childBranch\n\tINNER JOIN core_org_chart_tree AS parentBranch on childBranch.iLeft >= parentBranch.iLeft AND childBranch.iRight <= parentBranch.iRight\n\tINNER JOIN core_org_chart coc ON parentBranch.idOrg = coc.id_dir and coc.lang_code = 'english_uk'\n\tLEFT JOIN core_group_members cgm on cgm.idst = childBranch.idst_oc\n\tLEFT JOIN core_user cu on cu.idst = cgm.idstMember\n\tLEFT JOIN learning_courseuser lcu on lcu.idUser = cu.idst\n\tINNER JOIN learning_course lc on lc.idCourse = lcu.idCourse\n\tWHERE parentBranch.lev = 2\n\tAND coc.translation NOT LIKE '00.%'\n    and lcu.date_inscr >= '2018-07-01'\n) RESULT\ngroup by COMPANY, PRODUCT_ID, COURSE_NAME\norder by COMPANY ASC, COURSE_NAME ASC, PRODUCT_ID;"
    },
    {
      "sql": "select date_inscr,date_complete,score_given from learning_courseuser where idUser=63761 and idCourse=230"
    },
    {
      "sql": "select\nusername,\ncourse,\nSubscription_date,\nActive_until_date\nfrom\n(select \ncu.userid as Username,\nlc.name as Course,\nlcu.date_inscr as Subscription_date,\nlcu.date_expire_validity as Active_until_date\n\nfrom core_user cu \nLEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n\tselect lcat.name as catalog,  lco.idCourse\n\tfrom learning_catalogue lcat\n\tinner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n\tinner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nLEFT JOIN (\n\tselect idOrg, lev, idParent, iLeft, iRight, cu.idst from core_org_chart_tree coct\n\tLEFT JOIN core_group_members cgm on coct.idst_oc = cgm.idst\n\tleft join core_user cu on cu.idst = cgm.idstMember\n ) branch on branch.idst = cu.idst\n\nwhere (lcu.status = 0 or lcu.status = 1) and\ncats.catalog = 'Aberdeen Asset Managers: Course Catalogue' and\nbranch.iLeft > (select iLeft from core_org_chart_tree where idOrg=3031) and\nbranch.iRight < (select iRight from core_org_chart_tree where idOrg=3031 )) result;"
    },
    {
      "sql": "select\nUsername,\nName,\nCourse,\nStatus,\nSubscription_date,\nActive_until_date\nfrom\n(select \nSUBSTR(cu.userid,2) as Username,\nCONCAT(cu.lastname,', ',cu.firstname) as Name,\nlc.name as Course,\nCASE lcu.status\n\tWHEN 0 THEN 'Not Started'\n    WHEN 1 THEN 'In Progress'\nend Status,\nlcu.date_inscr as Subscription_date,\nlcu.date_expire_validity as Active_until_date\n\nfrom core_user cu \nLEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n\tselect lcat.name as catalog, lce.idCatalogue as catalogueId , lco.idCourse\n\tfrom learning_catalogue lcat\n\tinner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n\tinner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nLEFT JOIN (\n\tselect idOrg, lev, idParent, iLeft, iRight, cu.idst from core_org_chart_tree coct\n\tLEFT JOIN core_group_members cgm on coct.idst_oc = cgm.idst\n\tleft join core_user cu on cu.idst = cgm.idstMember\n ) branch on branch.idst = cu.idst\n\nwhere (lcu.status = 0 or lcu.status = 1) and\nlcu.date_expire_validity < NOW() and\ncats.catalogueId = 57 and\nbranch.iLeft > (select iLeft from core_org_chart_tree where idOrg=3031) and\nbranch.iRight < (select iRight from core_org_chart_tree where idOrg=3031) and\nlcu.date_inscr >= STR_TO_DATE('01/01/19', '%d/%m/%Y')\n ) result\norder by Username;"
    },
    {
      "sql": "select\nUsername,\nName,\nCourse,\nStatus,\nSubscription_date,\nActive_until_date\nfrom\n(select \nsubstr(cu.userid,2) as Username,\nCONCAT(cu.lastname,', ',cu.firstname) as Name,\nlc.name as Course,\nCASE lcu.status\n\tWHEN 0 THEN 'Not Started'\n    WHEN 1 THEN 'In Progress'\nend Status,\nlcu.date_inscr as Subscription_date,\nlcu.date_expire_validity as Active_until_date\n\nfrom core_user cu \nLEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n\tselect lcat.name as catalog,  lco.idCourse\n\tfrom learning_catalogue lcat\n\tinner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n\tinner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nLEFT JOIN (\n\tselect idOrg, lev, idParent, iLeft, iRight, cu.idst from core_org_chart_tree coct\n\tLEFT JOIN core_group_members cgm on coct.idst_oc = cgm.idst\n\tleft join core_user cu on cu.idst = cgm.idstMember\n ) branch on branch.idst = cu.idst\n\nwhere (lcu.status = 0 or lcu.status = 1) and\nlcu.date_expire_validity < NOW() and\ncats.catalog = 'Aberdeen Asset Managers: Course Catalogue' and\nbranch.iLeft > (select iLeft from core_org_chart_tree where idOrg=3031) and\nbranch.iRight < (select iRight from core_org_chart_tree where idOrg=3031) and\nlcu.date_inscr BETWEEN STR_TO_DATE('01/01/20', '%d/%m/%Y')\n AND STR_TO_DATE('31/12/20', '%d/%m/%Y')) result\norder by Username;"
    },
    {
      "sql": "select \nlc.name AS CourseName,\nlc.code AS CourseProductID,\nlc.idCourse as CourseInternalID,\nResult2.code as CourseCategoryCode,\nResult2.translation as CourseCategoryName,\nlc.create_date as CourseCreationDate\n\nfrom learning_course lc \nleft join \n(select distinct lcat.code as code, lcat.translation as translation, lcat.idCategory as categoryID, childTree.idCategory as cCategoryID,\n parentTree.idCategory as pCategoryID from learning_category lcat\ninner join learning_category_tree childTree on lcat.idCategory = childTree.idCategory\ninner join learning_category_tree parentTree on childTree.iLeft >= parentTree.iLeft AND childTree.iRight <= parentTree.iRight\nwhere parentTree.lev = 2 and lcat.lang_code= 'english_uk')Result2\non Result2.categoryID = lc.idCategory\nleft outer join learning_courseuser lcu \non lc.idCourse = lcu.idCourse\nwhere lcu.idCourse is null\n"
    },
    {
      "sql": "select lc.idCourse as 'Course ID', lc.code as 'Course Code', lc.name as 'Course Title', lc.description as 'Course Description',\nCASE\n\tWHEN lc.status=2 THEN 'Published'\n\tELSE 'Under Maintenance'\nEND AS 'Course Status',\nlc.date_begin as 'Course Publication date', lc.credits as 'Course Credits', lc.course_type as 'Course Type',\nws.id_session as 'Session ID', ws.name as 'Session Name', DATE_FORMAT(ws.date_begin,'%Y-%m-%d') as 'Session Date', DATE_FORMAT(ws.date_begin,'%T') as 'Session Start time', TIMESTAMPDIFF(MINUTE,ws.date_begin,ws.date_end) as 'Session duration',\n'Docebo-Red' as 'Instance', NOW() as 'Job Date'\nfrom learning_course lc\nleft join webinar_session ws on lc.idCourse = ws.course_id;"
    },
    {
      "sql": "select REPLACE(userid, '/', '') as 'User Name', firstname as 'User First Name', lastname as 'User Last Name',\nidst as 'User ID', email as 'Email', '' as 'Branch', '' as 'Sub Branch', valid as 'Active/Inactive Status',\nregister_date as 'Creation Date', lastenter as 'Last Access Date', expiration as 'Expiration Date', '' as 'Office/location Data', uuid as 'UUId',\n'Docebo-Red' as 'Instance', NOW() as 'Job Date'\nfrom core_user  where idst >= 1200000  order by idst"
    },
    {
      "sql": "select idUser as 'User Id', idCourse as 'Course Id',\nCASE\n    WHEN status=0 THEN 'Enrolled'\n\tWHEN status=1 THEN 'In Progress'\n\tWHEN status=2 THEN 'Completed'\n    WHEN status=3 THEN 'Suspended'\n    WHEN status=4 THEN 'Overbooking'\n    WHEN status=-1 THEN 'Subscription to Confirm'\n    WHEN status=-2 THEN 'Waiting List'\nEND AS 'Enrollment Status',\nCASE\n\tWHEN level=3 THEN 'Learner'\n\tWHEN level=4 THEN 'Tutor'\n\tWHEN level=6 THEN 'Instructor'\n\tWHEN level=8 THEN 'Coach'\nEND AS 'User Level',\ndate_inscr as 'Enrollment Date', 0 as 'Complete Percent', date_complete as 'Course Complete Date',\n'Docebo-Red' as 'Instance', NOW() as 'Job Date'\nfrom learning_courseuser where  idUser >=1204860 ;"
    },
    {
      "sql": "Select lc.idCatalogue as catalog_id, idst_member as catalog_member_id, lc.name as catalog_name ,chartTree.idOrg as branch_id\nFrom learning_catalogue_member lcm\nINNER JOIN learning_catalogue lc\non lc.idCatalogue = lcm.idCatalogue\nINNER JOIN core_org_chart_tree chartTree\nON lcm.idst_member = chartTree.idst_oc"
    },
    {
      "sql": "select\nUsername,\nName,\nCourse,\nStatus,\nSubscription_date,\nActive_until_date\nfrom\n(select \nSUBSTR(cu.userid,2) as Username,\nCONCAT(cu.lastname,', ',cu.firstname) as Name,\nlc.name as Course,\nCASE lcu.status\n\tWHEN 0 THEN 'Not Started'\n    WHEN 1 THEN 'In Progress'\nend Status,\nlcu.date_inscr as Subscription_date,\nlcu.date_expire_validity as Active_until_date\n\nfrom core_user cu \nLEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n\tselect lcat.name as catalog, lce.idCatalogue as catalogueId ,  lco.idCourse\n\tfrom learning_catalogue lcat\n\tinner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n\tinner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nLEFT JOIN (\n\tselect idOrg, lev, idParent, iLeft, iRight, cu.idst from core_org_chart_tree coct\n\tLEFT JOIN core_group_members cgm on coct.idst_oc = cgm.idst\n\tleft join core_user cu on cu.idst = cgm.idstMember\n ) branch on branch.idst = cu.idst\n\nwhere (lcu.status = 0 or lcu.status = 1) and\nlcu.date_expire_validity < NOW() and\ncats.catalogueId = 57 and\nbranch.iLeft > (select iLeft from core_org_chart_tree where idOrg=9353) and\nbranch.iRight < (select iRight from core_org_chart_tree where idOrg=9353) and\nlcu.date_inscr >= STR_TO_DATE('01/01/19', '%d/%m/%Y')\n ) result\norder by Username;"
    },
    {
      "sql": "select\nUsername,\nName,\nCourse,\nStatus,\nSubscription_date,\nActive_until_date\nfrom\n(select \nSUBSTR(cu.userid,2) as Username,\nCONCAT(cu.lastname,', ',cu.firstname) as Name,\nlc.name as Course,\nCASE lcu.status\n\tWHEN 0 THEN 'Not Started'\n    WHEN 1 THEN 'In Progress'\nend Status,\nlcu.date_inscr as Subscription_date,\nlcu.date_expire_validity as Active_until_date\n\nfrom core_user cu \nLEFT JOIN learning_courseuser lcu on lcu.idUser=cu.idst\nLEFT JOIN learning_course lc on lcu.idCourse=lc.idCourse\nLEFT JOIN (\n\tselect lcat.name as catalog, lce.idCatalogue as catalogueId, lco.idCourse\n\tfrom learning_catalogue lcat\n\tinner join learning_catalogue_entry lce on lcat.idCatalogue = lce.idCatalogue\n\tinner join learning_course lco on lco.idCourse = lce.idEntry\n) cats on cats.idcourse = lc.idCourse\nLEFT JOIN (\n\tselect idOrg, lev, idParent, iLeft, iRight, cu.idst from core_org_chart_tree coct\n\tLEFT JOIN core_group_members cgm on coct.idst_oc = cgm.idst\n\tleft join core_user cu on cu.idst = cgm.idstMember\n ) branch on branch.idst = cu.idst\n\nwhere (lcu.status = 0 or lcu.status = 1) and\nlcu.date_expire_validity < NOW() and\ncats.catalogueId = 57 and\nbranch.iLeft > (select iLeft from core_org_chart_tree where idOrg=9370) and\nbranch.iRight < (select iRight from core_org_chart_tree where idOrg=9370) and\nlcu.date_inscr >= STR_TO_DATE('01/01/19', '%d/%m/%Y')\n ) result\norder by Username;"
    }
  ]
}

